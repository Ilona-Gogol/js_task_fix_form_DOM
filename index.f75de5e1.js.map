{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,OAAO,OAAO,CAAC,CAAC;IACd,MAAM,KAAK,GAAG,YAAY,CAAC;IAC3B,MAAM,YAAY,GAAG,YAAY,CAAC;IAClC,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,OAAO,GAAG;IAChB,MAAM,WAAW,GAAG,kBAAkB;IACtC,MAAM,SAAS,GAAG;IAElB,GAAG,qBAAqB,CAAC,eAAe;IACxC,GAAG,YAAY,CAAC,eAAe,kBAAkB;AACnD;AAEA,SAAS,kBAAkB,IAAI;IAC7B,OAAO,KACJ,OAAO,CAAC,YAAY,OACpB,OAAO,CAAC,MAAM,CAAC,MAAQ,IAAI,WAAW;AAC3C","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('.field-text');\n\ninputs.forEach((el) => {\n  const id = el.getAttribute('id');\n  const fieldName = el.getAttribute('name');\n  const label = document.createElement('label');\n\n  label.htmlFor = id;\n  label.textContent = camelCaseToNormal(fieldName);\n  label.className = 'field-label';\n\n  el.insertAdjacentElement('beforebegin', label);\n  el.setAttribute('placeholder', camelCaseToNormal(fieldName));\n});\n\nfunction camelCaseToNormal(text) {\n  return text\n    .replace(/([A-Z])/g, ' $1')\n    .replace(/^./, (str) => str.toUpperCase());\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}